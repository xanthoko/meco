reference comm_idl as idl
reference broker_dsl as bdsl

Entities:
    imports*=Import
    brokers+=Broker
    nodes*=Node
    bridges*=Bridge
    proxies*=Proxy
;

Broker:
    'Broker: ' broker=[bdsl.Broker] (default='(default)')?
;

Node:
    'Node' name=ID '{'
        (('inports:' inports*=InPort)?
        ('outports:' outports*=OutPort)?
        ('broker:' broker=[bdsl.Broker])?)#
    '}'
;

OutPort:
    Publisher | RPC_Client
;

Publisher:
    '- publisher:'
        'topic:' topic=FQN
        ('message:' object=[idl.PubSubMessage])?
;

RPC_Client:
    '- rpc_client' name=ID ':'
        'message:' object=[idl.RPCMessage]
;

InPort:
    Subscriber | RPC_Service
;

Subscriber:
    '- subscriber:'
        'topic:' topic=FQN
;

RPC_Service:
    '- rpc_service' name=ID ':'
        'message:' object=[idl.RPCMessage]
;

Bridge:
    TopicBridge | RPCBridge
;

TopicBridge:
    'TopicBridge' name=ID '{'
        brokerA=[bdsl.Broker] '(' fromTopic=FQN ')' '-'
        brokerB=[bdsl.Broker] '(' toTopic=FQN ')'
    '}'
;

RPCBridge:
    'RPCBridge' name=ID '{'
        brokerA=[bdsl.Broker] '(' nameA=ID ')' '-'
        brokerB=[bdsl.Broker] '(' nameB=ID ')'
    '}'
;

Proxy:
    'Proxy' name=ID '{'
        ('inport:' inport=Subscriber
        'outport:' outport=Publisher
        'url:' url=STRING
        'method:' method=RequestMethods
        ('body:' body=[idl.Object])?
        ('broker:' broker=[bdsl.Broker])?)#
    '}'
;

RequestMethods:
    'GET' | 'POST'
;

FQN: ID+['.'];
FQNI: ID+['.']('.*')?;
Import: 'import' importURI=FQNI ('as' name=ID)? ';';

// Comments
Comment: CommentLine | CommentBlock ;

CommentLine: /\/\/.*?$/;

CommentBlock: /\/\*(.|\n)*?\*\//;
