import messages.idl;
import brokers.br;

Broker: MyRabbit
Broker: R4ABroker (default)
Broker: MyRedis

Node Take{
    inports:
        - subscriber:
            topic: collected.data
        - subscriber:
            topic: orphan.topic
    outports:
        - rpc_client testRPC:
            message: SonarSensorMsgR
}

Node Give{
    outports:
        - publisher:
            topic: new.data
            message: SonarSensorMsg
        - publisher:
            topic: orphan.topic.A
            message: ThermoSensorMsg2
    inports:
        - rpc_service testRPC:
            message: SonarSensorMsgR
    broker: MyRabbit
}

TopicBridge MR2R4A{
    MyRabbit(new.data) - R4ABroker(collected.data)
}

TopicBridge R4A2MR{
    R4ABroker(new.data) - MyRabbit(collected.data)
}

TopicBridge MRab2R4A{
    MyRedis(temp) - R4ABroker(temp)
}

RPCBridge R4A2MR{
    R4ABroker(testRPC) - MyRabbit(testRPC)
}

Proxy testProxy{
    inport:
        - subscriber:
            topic: proxy.sub
    outport:
        - publisher:
            topic: proxy.pub
    url: "http://localhost:8000"
    method: GET
    broker: R4ABroker
}
